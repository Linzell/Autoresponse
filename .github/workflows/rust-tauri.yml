name: Rust Checks & Security

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: false

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_security
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        working-directory: src-tauri
        run: cargo audit

  deps:
    name: Dependencies Check
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_deps
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Check dependencies
        working-directory: src-tauri
        run: |
          cargo update --dry-run
          cargo tree --duplicate

  check:
    name: Code Quality
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_check
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          key: check-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          cache-directories: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target

      - name: Check format
        working-directory: src-tauri
        run: cargo fmt --check

      - name: Check clippy
        working-directory: src-tauri
        run: cargo clippy -- -D warnings

      - name: Check documentation
        working-directory: src-tauri
        run: cargo doc --no-deps --document-private-items

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf llvm-tools-preview
          cargo install rustfilt

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          key: test-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          cache-directories: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target

      - name: Run tests with coverage
        working-directory: src-tauri
        env:
          RUSTFLAGS: "-C instrument-coverage"
          LLVM_PROFILE_FILE: "coverage/lcov-%p-%m.profraw"
        run: cargo test --all-targets --all-features

      - name: Install grcov
        if: runner.os == 'Linux'
        run: |
          wget https://github.com/mozilla/grcov/releases/download/v0.8.18/grcov-x86_64-unknown-linux-gnu.tar.bz2
          tar xf grcov-x86_64-unknown-linux-gnu.tar.bz2
          chmod +x grcov
          sudo mv grcov /usr/local/bin/

      - name: Generate coverage report
        working-directory: src-tauri
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" --ignore "tests/*" -o coverage.lcov

      - name: Upload coverage to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v3
        with:
          file: src-tauri/coverage.lcov
          fail_ci_if_error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ runner.os }}
          path: src-tauri/target/debug/deps/
          retention-days: 14
