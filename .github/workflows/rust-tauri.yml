name: Rust Checks & Security

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: false

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_NET_RETRY: 3
  # Add cache version for breaking changes
  CACHE_VERSION: 1

jobs:
  # Base job to establish initial cache
  setup:
    name: Setup Build Cache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Primary cache setup that will be shared across jobs
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          shared-key: "global-cache-v${{ env.CACHE_VERSION }}"
          cache-directories: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/bin/
          cache-targets: true
          cache-on-failure: true
          save-if: true

  security:
    name: Security Audit
    needs: setup
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_security
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # Reuse cache from setup
      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          shared-key: "global-cache-v${{ env.CACHE_VERSION }}"

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit

      - name: Run security audit
        working-directory: src-tauri
        run: cargo audit

  deps:
    name: Dependencies Check
    needs: setup
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_deps
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # Reuse cache from setup
      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          shared-key: "global-cache-v${{ env.CACHE_VERSION }}"

      - name: Check dependencies
        working-directory: src-tauri
        run: |
          cargo update --dry-run
          cargo tree --duplicate

  check:
    name: Code Quality
    needs: setup
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_check
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Reuse cache from setup
      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          shared-key: "global-cache-v${{ env.CACHE_VERSION }}"

      - name: Check format
        working-directory: src-tauri
        run: cargo fmt --check

      - name: Check clippy
        working-directory: src-tauri
        run: cargo clippy -- -D warnings

      - name: Check documentation
        working-directory: src-tauri
        run: cargo doc --no-deps --document-private-items

  test:
    name: Test
    needs: [setup, check]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Reuse cache from setup with additional test-specific caching
      - name: Setup Test Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          shared-key: "global-cache-v${{ env.CACHE_VERSION }}"
          prefix-key: "test"
          cache-directories: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/bin/
            target/
          cache-targets: true
          cache-on-failure: true
          save-if: true

      # Parallel test execution
      - name: Run unit tests
        working-directory: src-tauri
        run: cargo test --lib --bins --tests --all-features

      - name: Run doc tests
        if: success() || failure()
        working-directory: src-tauri
        run: cargo test --doc --all-features

      # Coverage with cached tarpaulin
      - name: Install cargo-tarpaulin
        if: success() || failure()
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin

      - name: Generate coverage
        if: success() || failure()
        working-directory: src-tauri
        run: |
          mkdir -p ../coverage
          cargo tarpaulin --out xml --output-dir ../coverage --timeout 120 --all-features --workspace

      - name: Upload coverage
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: rust-coverage
          path: coverage/
          retention-days: 14
