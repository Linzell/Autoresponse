name: Rust Checks & Security

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: false

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_security
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        working-directory: src-tauri
        run: cargo audit

  deps:
    name: Dependencies Check
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_deps
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Check dependencies
        working-directory: src-tauri
        run: |
          cargo update --dry-run
          cargo tree --duplicate

  check:
    name: Code Quality
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_call' || inputs.run_check
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          working-directory: src-tauri
          key: test-${{ matrix.test-group }}
          cache-directories: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target

      - name: Check format
        working-directory: src-tauri
        run: cargo fmt --check

      - name: Check clippy
        working-directory: src-tauri
        run: cargo clippy -- -D warnings

      - name: Check documentation
        working-directory: src-tauri
        run: cargo doc --no-deps --document-private-items

  test:
    name: Test
    runs-on: ubuntu-latest
    if: always()
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          working-directory: src-tauri
          key: test-${{ matrix.test-group }}
          cache-directories: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target

      - name: Run tests
        working-directory: src-tauri
        run: cargo test --all-features

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Generate coverage
        working-directory: src-tauri
        run: cargo tarpaulin --out xml --output-dir ../coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: rust-coverage
          path: coverage/
          retention-days: 14
