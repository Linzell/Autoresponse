name: Rust Checks & Security

on:
  push:
    branches:
      - "*"
  pull_request:
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Run security audit
        working-directory: src-tauri
        run: cargo audit

  deps:
    name: Dependencies Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0 \
            libsoup-3.0-dev \
            pkg-config

      - name: Check dependencies
        working-directory: src-tauri
        run: |
          cargo update --dry-run
          cargo tree --duplicate

  check:
    name: Code Quality
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0 \
            libsoup-3.0-dev \
            pkg-config

      - name: Install macOS dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          brew install pkg-config
          brew install gtk+3
          brew install webkit2gtk-4.0
          brew install librsvg
          brew install libsoup@3

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          vcpkg install libsoup:x64-windows
          vcpkg integrate install

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Check format
        working-directory: src-tauri
        run: cargo fmt --check

      - name: Check clippy
        working-directory: src-tauri
        run: cargo clippy -- -D warnings

      - name: Check documentation
        working-directory: src-tauri
        run: cargo doc --no-deps --document-private-items

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0 \
            libsoup-3.0-dev \
            pkg-config

      - name: Install macOS dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          brew install pkg-config
          brew install gtk+3
          brew install webkit2gtk-4.0
          brew install librsvg
          brew install libsoup@3

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          vcpkg install libsoup:x64-windows
          vcpkg integrate install

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        working-directory: src-tauri
        run: cargo test --all-features

      - name: Install cargo-tarpaulin
        if: matrix.platform == 'ubuntu-latest'
        run: cargo install cargo-tarpaulin

      - name: Generate coverage
        if: matrix.platform == 'ubuntu-latest'
        working-directory: src-tauri
        run: cargo tarpaulin --out xml --output-dir ../coverage

      - name: Upload coverage
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: rust-coverage
          path: coverage/
          retention-days: 14